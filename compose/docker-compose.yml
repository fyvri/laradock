volumes:
  node_modules:
    name: ${LARADOCK_APP_NAME:-laradock}-node_modules
  vendor:
    name: ${LARADOCK_APP_NAME:-laradock}-vendor

networks:
  default:
    name: ${LARADOCK_APP_NAME:-laradock}
    driver: bridge

services:
  app:
    image: ${LARADOCK_APP_NAME:-laradock}-app:latest
    container_name: ${LARADOCK_APP_NAME:-laradock}-app
    build:
      context: ..
      dockerfile: ./compose/app/Dockerfile
      args:
        - LARADOCK_UID=${LARADOCK_UID:-1000}
        - LARADOCK_GID=${LARADOCK_GID:-1000}
        - LARADOCK_ENVIRONMENT=${LARADOCK_ENVIRONMENT:-production}
        - LARADOCK_APP_PATH=${LARADOCK_APP_PATH:-.}
        - LARADOCK_PHP_VERSION=${LARADOCK_PHP_VERSION:-}
    volumes: &app_volumes
      - type: bind
        source: ${LARADOCK_APP_PATH:-.}
        target: /var/www/html
        consistency: delegated
      - type: volume
        source: node_modules
        target: /var/www/html/node_modules
      - type: volume
        source: vendor
        target: /var/www/html/vendor
    networks:
      - default
    restart: unless-stopped

  web:
    image: ${LARADOCK_APP_NAME:-laradock}-web:latest
    container_name: ${LARADOCK_APP_NAME:-laradock}-web
    depends_on:
      - app
    build:
      context: ..
      dockerfile: ./compose/web/Dockerfile
      args:
        - LARADOCK_UID=${LARADOCK_UID:-1000}
        - LARADOCK_GID=${LARADOCK_GID:-1000}
        - LARADOCK_APP_PORT=${LARADOCK_APP_PORT:-8000}
    ports:
      - target: 80
        published: ${LARADOCK_APP_PORT:-8000}
        protocol: tcp
        mode: host
    volumes: *app_volumes
    networks:
      - default
    restart: unless-stopped
